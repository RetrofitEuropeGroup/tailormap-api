# This profile will write the DDL for the first Flyway migration.

# Run the application with this profile active manually. Note that the database will be CLEANED and
# all data lost!

# The generated target file should be committed to git. Note that this can only be done once: when
# Tailormap is in production we need to use migrations, even for new instances.

# We may want to edit the script to change the column ordering, as Hibernate uses alphabetical order
# because annotation order is not guaranteed by Java. This is mostly for aesthetic purposes as
# column order should in most cases not be relied on, although there are exceptions such
# as composite indexes.

# The proprietary Flyway Teams version does support creating a new "baseline migration" with a
# single schema script for a specific version to avoid executing many migrations for a new
# environment.

tailormap-api.database.clean=true
tailormap-api.exit-after-creating-ddl=true
spring.flyway.clean-disabled=false

spring.main.web-application-type=none

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# Custom property to delete the script because it is appended to by default
spring.jpa.properties.javax.persistence.schema-generation.scripts.delete-first=true
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/migration/V1__schema.sql